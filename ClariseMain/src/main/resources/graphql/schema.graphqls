type Category{
    id: String!
    catName: String!
    description:String
    isActive:Boolean!
}

type Skill{
    id: String!
    skillName: String!
    description:String
    isActive:Boolean!
}

type Query{
    getCategories: [Category]!
    findCategoryById(categoryId:String!):Category!

    getSkills: [Skill]!
    findSkillById(skillId:String!):Skill!

    getSkills(categoryId: String!): [Skill]!

    getQualifications: [QualificationDto]!
    getQualificationById(qualificationId:String!):QualificationDto!
}

type Mutation{
    addOrUpdateCategory(catName: String!, description :String, isActive:Boolean!): Category!
    deleteCategory( categoryId: String!):Status

    addOrUpdateSkill(skillName:String!,description:String,isActive: Boolean!):  Skill!
    deleteSkill( skillId: String!):Status

    addOrUpdateSkillCategory(skillCategoryDto:SkillCategoryDto):[SkillCategory]

    addOrUpdateQualification(qualificationDto: QualificationDto): QualificationDto!
    deleteQualification(qualificationId: String!):Status
}

enum Status{
    SUCCESS
    USER_ALREADY_EXISTS
    FAILURE
    MESSAGE_SENT

}

type SkillCategory{
    skill:Skill!
    category:Category!
    isActive:Boolean!

}
input SkillCategoryDto{
    categoryId:String!
    skillIds:[String]!
}

input QualificationDto{
    id:String!
    name:String!
    description:String!
    isActive:Boolean!

}
